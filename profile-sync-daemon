#!/bin/bash
# Profile-sync-daemon v3.0
# Updated 14-Jan-2011
# By graysky <graysky AT archlinux DOT us>
# Inspired by some code originally  written by Colin Verot

BROWSERS="chromium google-chrome midori mozilla opera opera-next" # all supported browsers
. /etc/psd.conf

set_which() {
	homedir="$(su -c 'echo $HOME' $user)"
	case "$i" in
		chromium)
			[[ "$i" = "chromium" ]] && STATIC="$homedir/.config/$i-backup" && LINK="$homedir/.config/$i"
			;;
		google-chrome)
			[[ "$i" = "google-chrome" ]] && STATIC="$homedir/.config/$i-backup" && LINK="$homedir/.config/$i"
			;;		
		midori)
			[[ "$i" = "midori" ]] && STATIC="$homedir/.config/$i-backup" && LINK="$homedir/.config/$i"
			;;
		mozilla)
			[[ "$i" = "mozilla" ]] && STATIC="$homedir/.$i-backup" && LINK="$homedir/.$i"
			;;
		opera)
			[[ "$i" = "opera" ]] && STATIC="$homedir/.$i-backup" && LINK="$homedir/.$i"
			;;
		opera-next)
			[[ "$i" = "opera" ]] && STATIC="$homedir/.$i-backup" && LINK="$homedir/.$i"
			;;
		*)
			# this should never happen
			exit 1
	esac
}

sync() {
	# sync profiles to tmpfs and back again
	for user in $USERS; do
		for i in $BROWSERS; do
			set_which			
			# check if user has browser profile
			if [[ -d $LINK ]]; then
				[[ -r "$VOLATILE/$user-$i" ]] || su -c "install -dm755 $VOLATILE/$user-$i" $user

				# backup profile and link to tmpfs
				if [[ $(readlink "$LINK") != "$VOLATILE/$user-$i" ]]; then
					mv $LINK $STATIC
					ln -s $VOLATILE/$user-$i $LINK
				fi

				# sync the RAM profile to the disc
				if [[ -e $LINK/.flagged ]]; then
					su -c "rsync -a --delete --exclude .flagged $LINK/ $STATIC/" $user
				else
					su -c "rsync -a $STATIC/ $LINK/" $user
					su -c "touch $LINK/.flagged" $user
				fi
			else
				/bin/true
			fi
		done
	done
}

debug() {
	# sync profiles to tmpfs and back again
	for user in $USERS; do
		for i in $BROWSERS; do
			set_which
			echo $user:$homedir:$i
		done
	done
}


check() {
	# crash recovery
	for user in $USERS; do
		for i in $BROWSERS; do
			set_which
			[[ -h $LINK ]] && rm -f $LINK
			[[ -d $STATIC ]] && mv $STATIC $LINK
		done
	done
}

unsync() {
	# restore virgin state of profiles on physical discs
	for user in $USERS; do
		for i in $BROWSERS; do
			set_which
			# check if user has browser profile
			if [[ -h $LINK ]]; then
				rm -f $LINK
				[[ -d $STATIC ]] && mv $STATIC $LINK
				[[ -d "$VOLATILE/$user-$i" ]] && rm -rf $VOLATILE/$user-$i
			else
				/bin/true
			fi
		done
	done
}

case "$1" in
	debug)
		debug
		;;
	check)
		# do not run if the daemon is running
		[[ ! -f /run/daemons/psd ]] && check
		;;
	sync)
		sync
		;;
	unsync)
		# make sure the daemon is running
		[[ -f /run/daemons/psd ]] && unsync
		;;
	*)
		# keep user from messing with this directly
		[[ -f /run/daemons/psd ]] && echo "You should not call this script directly, let the /etc/rc.d/psd do it for you!" && exit 1
esac
exit 0
