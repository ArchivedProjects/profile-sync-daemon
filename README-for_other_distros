NAME
profile-sync-daemon - Symlinks and syncs browser profile dirs to RAM thus reducing HDD/SDD calls and speeding-up browsers.

SYNOPSIS
systemctl [options] psd.service
or
rc.d [options] psd

DESCRIPTION
Profile-sync-daemon (psd) is a tiny pseudo-daemon designed to manage your browser profile(s) in tmpfs and to periodically sync back to the physical disc (HDD/SSD). This is accomplished via a symlinking step and an innovative use of rsync to maintain back-up and synchronization between the two. One of the major design goals of psd is a completely transparent user experience.

Running this daemon is beneficial for two reasons:
 o Reduced wear to physical discs
 o Speed

Since the profile(s), browser cache*, etc. are relocated into tmpfs (RAM disk), the corresponding onslaught of I/O associated with using the browser is also redirected from the physical disc to RAM, thus reducing wear to the physical disc and also greatly improving browser speed and responsiveness. For example, the access time of RAM is on the order of nanoseconds while the access time of physical discs is on the order of milliseconds. This is a difference of six orders of magnitude or 1,000,000 times faster.
*Note that some browsers such as Chromium, Google-chrome, and Midori, actually keeps their cache directories separately from their browser profile directory. It is not within the scope of profile-sync-daemon to modify this behavior; users are encouraged to modify this behavir. For example, refer to the following url for several work-arounds for the Chrome-based browsers: https://wiki.archlinux.org/index.php/Chromium_Tips_and_Tweaks#Cache_in_tmpfs


SETUP
User managed settings are defined in /etc/psd.conf which is included in the package. At a minimum, define which user(s) will have their profiles managed by psd and note that at least one user must be defined.

Example: 

	USERS="bar foo"

 o Optionally uncomment and define which browsers are to be managed in the BROWSERS array. Note that the default is all browsers unless otherwise defined.
 o Optionally redefine the location of your distro's tmpfs. Do this in the VOLATILE variable. Note that for Arch Linux, the default value of "/tmp" should work just fine.

GENERAL USAGE
Do not call /usr/bin/profile-sync-daemon directly. Instead use the provided daemon files to interact with psd. The initial synchronization will occur when the daemon starts. Additionally, cron (if running on your system) will call it to sync or update once per hour. Finally, psd will sync back a final time when it is called to stop.
	
USAGE FOR SYSTEMD USERS
The provided daemon file should be used to interact with psd (/usr/lib/systemd/system/psd.service):

	# systemctl [option] psd.service

Available options:
 start  Turn on daemon; make symlinks and actively manage targets in tmpfs.
 stop  Turn off daemon; remove symlinks and rotate tmpfs data back to disc.
 enable  Autostart daemon when system comes up.
 disable  Remove daemon from the list of autostart daemons.

DEBUG MODE
The debug option can be called to show users exactly what psd will do based on the /etc/psd.conf entered. Call it like so:

	$ profile-sync-daemon debug

As stated above, if no specific browser or set of browsers are defined in the BROWSERS array, psd will sync ALL profiles that it finds for the given user.

SUPPORTED BROWSERS AND CAVEATS
	Currently, the following browsers are auto-detected and managed:
	o Chromium
	o Conkeror
	o Firefox (stable,beta,aurora)
	o Google-chrome
	o Heftig's version of Aurora (https://bbs.archlinux.org/viewtopic.php?id=117157)
	o Midori
	o Opera
	o Opera-Next
	o QupZilla

	For more, see: https://wiki.archlinux.org/index.php/Profile-sync-daemon

CONTRIBUTE
Should you wish to contribute to this code, please fork and send a pull request. Source is freely available on github: https://github.com/graysky2/profile-sync-daemon

BUGS
It is known that on slow systems with large profiles, the sync'ing step sometimes take longer than the boot-up of the WM. Therefore, users can theoretically start their browser before the profile has been transitioned to tmpfs. This is particularly prevalent on systems with slow HDDs running systemd.

AUTHOR
graysky (graysky AT archlinux DOT us)
